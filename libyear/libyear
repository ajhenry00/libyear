#!/usr/bin/env python
import argparse

from libyear.pypi import get_lib_days, get_no_of_releases
from libyear.utils import load_requirements, get_requirement_files, get_requirement_name_and_version

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-r', help="Requirements file/path", action='store')
    parser.add_argument('--sort', help="Sort by years behind, in descending order", action='store_true')
    args = parser.parse_args()
    requirements = set()
    requirements_files = list(get_requirement_files(args.r))

    if requirements_files.size() != 0:

        for req_file in requirements_files:
            requirements.update(load_requirements(req_file))
       
        total_days = 0
    
        for req in requirements:
            name, version, version_lt = get_requirement_name_and_version(req)
            if not name:
                continue

            if not version and not version_lt:
                continue
        
            v, lv, days = get_lib_days(name, version, version_lt)
            total_days += days

        print("%s" % str(round(total_days / 365, 2)))
    else:
        print("NULL")
        


if __name__ == "__main__":
    main()
